// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  password String   
  name     String?
  recipes  Recipe[]
  ratings  Rating[]  
}

model Recipe {
  id            Int           @id @default(autoincrement())
  title         String
  content       String?       
  ingredients   Ingredient[]  
  author        User          @relation(fields: [authorId], references: [id])
  authorId      Int
  ratings       Rating[]
  averageRating Float?        
  createdAt     DateTime      @default(now())
}

model Ingredient {
  id        Int      @id @default(autoincrement())
  name      String
  quantity  Float     
  metric    Metric    @relation(fields: [metricId], references: [id])
  metricId  Int
  recipe    Recipe    @relation(fields: [recipeId], references: [id])
  recipeId  Int
}

model Metric {
  id          Int          @id @default(autoincrement())
  name        String
  ingredients Ingredient[]
}

model Rating {
  id        Int      @id @default(autoincrement())
  value     Int      
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  recipeId  Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
}
